Question #5: Array Sorting
Write an algorithm that sorts an array without using the sort() method. There are many different sorting algorithms — take the time to read about the following:

Quick sort
Merge sort
Heap sort
Insertion sort
Bubble sort
Selection sort
You may implement any of the above algorithms (or your own) to solve the problem — as long as it doesn't use sort().

Example
Input: [9, 2, 7, 12]

Output: [2, 7, 9, 12]

PSEUDOCODE:
- The quickSort algorithm chooses one element to define as the pivot and then evaluate all the other elements against that one
- if the evaluated element is greater than the pivot, then it gets pushed to an array, if it is less than the pivot, it will get pushed to a different Array
- ultimately, each of those arrays get evaluated recursively and then concatnated together with the pivot in the middle

const quickSort = (arr) => {
  if (arr.length <= 1) {
    return arr;
  }

  let pivot = arr[0];
  let leftArr = [];
  let rightArr = [];

  for (let i = 1; i <arr.length; i ++) {
    if (arr[i] < pivot) {
      leftArr.push(arr[i]);
    } else {
      rightArr.push(arr[i])
    }
  }
  return [...quickSort(leftArr), pivot, ...quickSort(rightArr)];
};