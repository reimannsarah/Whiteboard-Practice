Question #2: Array Deduping
Write an algorithm that removes duplicates from an array. Do not use a function like filter() to solve this. Once you have solved the problem, demonstrate how it can be solved with filter(). Solve the problem with and without recursion.

Example
Input: [7, 9, "hi", 12, "hi", 7, 53]

Output: [7, 9, "hi", 12, 53]

PSEUDOCODE:
- I want to loop through the array and at each element, compare it to the rest of the elements in the array
- I want to create a new array that contains no duplicates
- loop within a loop?


function deDupe(array) {
  let deDupedArr = [];
  for (let i = 0; i < array.length; i ++) {
    if (!deDupedArr.includes(array[i])) {
      deDupedArr.push(array[i]);
    }
  }
  return deDupedArr;
}

function deDupe(array) {
  return array.filter((element, index) => 
    array.indexOf(element) === index);
}



const recurseDeDupe = (array) => {
  if (array.length === 0) {
    return [];
  } else {
    const restDeDuped = recurseDeDupe(array.slice(1));
    if (!restDeDuped.includes(array[0])) {
    return [array[0], ...restDeDuped];
    } else {
      return restDeDuped
    }
  }
}